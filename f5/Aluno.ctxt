#BlueJ class context
comment0.target=Aluno
comment0.text=\r\n\ Classe\ Aluno.\r\n\ Classe\ que\ modela\ de\ forma\ muito\ simples\ a\ \r\n\ informa\u00C3\u00A7\u00C3\u00A3o\ e\ comportamento\ relevante\ de\ um\ aluno.\r\n\ \r\n\ @author\ MaterialPOO\r\n\ @version\ 20200216\r\n\ @version\ 20210406\r\n
comment1.params=
comment1.target=Aluno()
comment1.text=\r\n\ Constructores\ para\ a\ classe\ Aluno\r\n
comment10.params=nome
comment10.target=void\ setNome(java.lang.String)
comment11.params=curso
comment11.target=void\ setCurso(java.lang.String)
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ toString\r\n\ comum\ na\ maioria\ das\ classes\ Java.\r\n\ \r\n\ @return\ \ \ \ \ uma\ string\ com\ a\ informa\u00C3\u00A7\u00C3\u00A3o\ textual\ do\ objecto\ aluno\r\n
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ igualdade\ entre\ dois\ Aluno\r\n\ Redefini\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ equals\ de\ Object.\r\n\ \r\n\ @param\ \ umAluno\ \ \ aluno\ que\ \u00C3\u00A9\ comparado\ com\ o\ receptor\r\n\ @return\ \ \ \ \ \ booleano\ true\ ou\ false\r\n
comment14.params=
comment14.target=Aluno\ clone()
comment14.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ clonagem\ de\ um\ Aluno\r\n\ \r\n\ @return\ \ objecto\ do\ tipo\ Aluno\r\n
comment15.params=
comment15.target=int\ hashCode()
comment15.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ de\ hashCode.\r\n\ Exemplo\ para\ ser\ modificado,\ neste\ caso\ recorre\ ao\ hashCode\r\n\ das\ String.\r\n
comment16.params=outroAluno
comment16.target=int\ compareTo(Aluno)
comment16.text=\r\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ da\ ordem\ natural.\r\n\ Neste\ caso\ a\ ordem\ natural\ \u00C3\u00A9\ alfabeticamente\ crescente.\r\n\ \r\n
comment2.params=numero\ nota\ nome\ curso
comment2.target=Aluno(java.lang.String,\ int,\ java.lang.String,\ java.lang.String)
comment3.params=umAluno
comment3.target=Aluno(Aluno)
comment4.params=
comment4.target=java.lang.String\ getNumero()
comment4.text=\r\n\ M\u00C3\u00A9todo\ que\ devolve\ o\ n\u00C3\u00BAmero\ de\ um\ aluno.\r\n\ \r\n\ @return\ String\ com\ o\ n\u00C3\u00BAmero\ do\ aluno\r\n
comment5.params=
comment5.target=int\ getNota()
comment5.text=\r\n\ M\u00C3\u00A9todo\ que\ devolve\ a\ nota\ de\ um\ aluno.\r\n\ \r\n\ @return\ int\ com\ o\ n\u00C3\u00BAmero\ do\ aluno\r\n
comment6.params=
comment6.target=java.lang.String\ getNome()
comment6.text=\r\n\ M\u00C3\u00A9todo\ que\ devolve\ o\ nome\ de\ um\ aluno.\r\n\ \r\n\ @return\ String\ com\ o\ nome\ do\ aluno\r\n
comment7.params=
comment7.target=java.lang.String\ getCurso()
comment7.text=\r\n\ M\u00C3\u00A9todo\ que\ devolve\ o\ curso\ de\ um\ aluno.\r\n\ \r\n\ @return\ String\ com\ o\ n\u00C3\u00BAmero\ do\ aluno\r\n
comment8.params=novaNota
comment8.target=void\ setNota(int)
comment9.params=numero
comment9.target=void\ setNumero(java.lang.String)
numComments=17
